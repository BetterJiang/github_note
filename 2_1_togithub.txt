
现在的情景是，你已经在本地创建了一个Git仓库后，
又想在GitHub创建一个Git仓库，并且让这两个仓库进行远程同步，
这样，GitHub上的仓库既可以作为备份，又可以让其他人通过该仓库来协作，真是一举多得。

现在，我们根据GitHub的提示，在本地的learngit仓库下运行命令：
git remote add origin git@server-name:path/repo-name.git


要关联一个远程库，使用命令
git remote add origin git@server-name:path/repo-name.git
关联后，第一次推送master分支的所有内容，使用命令
git push -u origin master

【此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；
分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，
也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！
当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！】


把本地库的内容推送到远程，用git push命令，实际上是把当前分支master推送到远程。
由于远程库是空的，我们第一次推送master分支时，加上了-u参数，
Git不但会把本地的master分支内容推送的远程新的master分支，
还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。

git@github.com:BetterJiang/R-stat-note.git

git remote add origin git@github.com:BetterJiang/R-stat-note.git

git push -u origin master


2. Creating a new branch is quick.

git branch

git checkout -b dev

the same as:
git branch dev
git checkout dev

在dev 的 git branch 下， modify the togithub.txt 
Creating a new branch is quick.

然后提交：
$ git add togithub.txt 
$ git commit -m "use branch is fast and safe"

cat togithub.txt

git checkout master
cat togithub.txt

git merge dev

git branch -d dev

git branch



Git鼓励大量使用分支：
查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>


