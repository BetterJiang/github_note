
版本回退

在实际工作中，我们脑子里怎么可能记得一个几千行的文件每次都改了什么内容，不然要版本控制系统干什么。
版本控制系统肯定有某个命令可以告诉我们历史记录，在Git中，我们用git log命令查看：

$ git log

git log 命令显示从最近到最远的提交日志，我们可以看到3次提交，最近的一次是 wrote a note of modification，上一次是 a little modification，最早的一次是 add a new file。
如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数：
$ git log --pretty=oneline


版本回退时候，首先，Git必须知道当前版本是哪个版本，在Git中，用HEAD表示当前版本，
也就是最新的提交 79e8c5a63fc47e7e2aefcaf65ac259f92990b3a9 （注意我的提交ID和你的肯定不一样），
上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。

现在，我们要把当前版本“wrote a note of modification”回退到上一个版本“a little modification”，就可以使用git reset命令：

$ git reset --hard HEAD^

--hard参数有啥意义？这个后面再讲，现在你先放心使用。
看看 hello_world.txt 的内容是不是版本 a little modification：

$ cat hello_world.txt


Git的版本回退速度非常快，因为Git在内部有个指向当前版本的 HEAD 指针，当你回退版本的时候，Git仅仅是把 HEAD 从 wrote a readme file 指向 a little modification.



运行git status命令看看结果

git status 

虽然Git告诉我们readme.txt被修改了，但如果能看看具体修改了什么内容，自然是很好的。
比如你休假两周从国外回来，第一天上班时，已经记不清上次怎么修改的readme.txt，所以，需要用git diff这个命令看看：

要随时掌握工作区的状态，使用git status命令。
如果git status告诉你有文件被修改过，用git diff可以查看修改内容。

